<div class="d-flex flex-row">
    <input type="text" class="form-control" @bind-value="FilterValue"  @bind-value:event="oninput" placeholder="Фильтр" />
    <div class="dropdown">
        <BSDropdown>
            <BSDropdownToggle Color="Color.Primary">@CurrentFilter</BSDropdownToggle>
            <BSDropdownMenu>
                <BSDropdownItem @onclick="AllFilter ">Все</BSDropdownItem>
                <BSDropdownItem @onclick="FinFilter">Завершённые</BSDropdownItem>
                <BSDropdownItem @onclick="UnfinFilter">Незавершённые</BSDropdownItem>
            </BSDropdownMenu>
        </BSDropdown>
    </div>
</div>

@code {
    private string CurrentFilter { get; set; } = "Все";
    private Filters curFilter = Filters.All;
    private string filterValue = "";
    [Parameter]
    public string FilterValue
    {
        get => filterValue;
        set
        {
            filterValue = value;
            DoFilter();
        }
    }
    [Parameter]
    public EventCallback<string> FilterValueChanged { get; set; }
    [Parameter]
    public Action<string, Filters> OnFilterChanged { get; set; }

    protected override void OnInitialized()
    {
        FilterValue = "";
    }

    private void DoFilter() => OnFilterChanged?.Invoke(filterValue == null ? "" : filterValue, curFilter);

    private void AllFilter()
    {
        CurrentFilter = "Все";
        curFilter = Filters.All;
        DoFilter();
    }

    private void FinFilter()
    {
        CurrentFilter = "Завершённые";
        curFilter = Filters.Finished;
        DoFilter();
    }


    private void UnfinFilter()
    {
        CurrentFilter = "Незавершённые";
        curFilter = Filters.Unfinished;
        DoFilter();
    }
}
